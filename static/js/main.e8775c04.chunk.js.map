{"version":3,"sources":["func/getFaceBoundry.js","func/getNewInfo.js","InfoSection.js","DisplayInfo.js","FrameBox.js","App.js","serviceWorker.js","index.js"],"names":["getFaceBoundry","face","map","n","detectedFace","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","getNewInfo","getAge","getRace","getGender","newArray","forEach","age","i","push","name","ageProb","value","race","raceProb","gender","genderProb","InfoSection","_ref","isVisible","agePercent","racePercent","genderPercent","ag","Math","round","ageP","raceP","genderP","react_default","a","createElement","className","style","display","DisplayInfo","info","arr","props","src_InfoSection","FrameBox","picture","faceFrame","onHandleMouse","box","key","onMouseEnter","top","right","bottom","left","length","id","alt","src","initialState","input","index","getInfo","inputState","stateText","error","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getFaceArea","data","imageInfo","outputs","regions","allFace","age_appearance","concepts","gender_appearance","multicultural_appearance","setState","onInputChange","e","state","target","files","file","reader","FileReader","readAsDataURL","onload","result","onHandleInputState","onHandleSubmit","sendInput","split","slice","join","alert","app","models","predict","then","response","catch","err","_this$state","displayPerson","onClick","type","onChange","placeholder","src_DisplayInfo","src_FrameBox","Component","Clarifai","apiKey","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oRAEaA,EAAiB,SAACC,GAC7B,OAAOA,EAAKC,IAAI,SAAAC,GACf,IAAMC,EAAeD,EAAEE,YAAYC,aAC7BC,EAAQC,SAASC,eAAe,cAC7BC,EAAQC,OAAOJ,EAAMG,OACrBE,EAASD,OAAOJ,EAAMK,QAC5B,MAAO,CACJC,QAAUT,EAAaU,SAAWJ,EAChCK,OAASX,EAAaY,QAAUJ,EAChCK,SAAWP,EAASN,EAAac,UAAYR,EACzCS,UAAYP,EAAUR,EAAagB,WAAaR,MCXlDS,EAAa,SAACC,EAAQC,EAAQC,GAE1C,IAAIC,EAAW,GAQf,OANCH,EAAOI,QAAQ,SAACC,EAAIC,GAAL,OAAWH,EAASI,KAAK,CAACF,IAAML,EAAOM,GAAGE,KAAMC,QAAUT,EAAOM,GAAGI,UAEnFT,EAAQG,QAAQ,SAACO,EAAKL,GAAOH,EAASG,GAAGK,KAAOV,EAAQK,GAAGE,KAAML,EAASG,GAAGM,SAAWX,EAAQK,GAAGI,QAEnGR,EAAUE,QAAQ,SAACS,EAAOP,GAAOH,EAASG,GAAGO,OAAQX,EAAUI,GAAGE,KAAML,EAASG,GAAGQ,WAAaZ,EAAUI,GAAGI,QAExGP,GC2COY,EAnDK,SAAAC,GAAsE,IAApEC,EAAoED,EAApEC,UAAWZ,EAAyDW,EAAzDX,IAAIa,EAAqDF,EAArDE,WAAWP,EAA0CK,EAA1CL,KAAiBE,GAAyBG,EAArCG,YAAqCH,EAAzBH,QAAOO,EAAkBJ,EAAlBI,cACjEC,EAAIC,KAAKC,MAAMlB,GACfmB,EAAKF,KAAKC,MAAmB,IAAbL,GAAkB,IAClCO,EAAOH,KAAKC,MAAkB,IAAZL,GAAiB,IACnCQ,EAAQJ,KAAKC,MAAoB,IAAdH,GAAmB,IAE5C,OACCO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,MAAOd,EAAU,CAACe,QAAQ,SAAS,CAACA,QAAS,SACzEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,IAA8BT,IAE/BM,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,IAA8BN,KAIhCG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,IAA8BjB,IAE/Bc,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,IAA8BJ,KAKhCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,IAA8BnB,IAE/BgB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,IAA8BL,SCjBrBQ,EAxBK,SAAAjB,GAAqB,IAAnBkB,EAAmBlB,EAAnBkB,KAAKjB,EAAcD,EAAdC,UAEtBkB,EAAI,GACR,IAAI,IAAIC,KAASF,EAChBC,EAAI5B,KAAK2B,EAAKE,IAKf,OACCT,EAAAC,EAAAC,cAACQ,EAAD,CACIpB,UAAWA,EACdZ,IAAM8B,EAAI,GACVjB,WAAYiB,EAAI,GAChBxB,KAAMwB,EAAI,GACVhB,YAAagB,EAAI,GACjBtB,OAAQsB,EAAI,GACZf,cAAee,EAAI,MCaPG,EA/BE,SAAAtB,GAAqC,IAAnCuB,EAAmCvB,EAAnCuB,QAAQC,EAA2BxB,EAA3BwB,UAAUC,EAAiBzB,EAAjByB,cAC7BC,EAAMF,EAAU5D,IAAI,SAAC8D,EAAIpC,GAC9B,OACCqB,EAAAC,EAAAC,cAAA,OACCC,UAAW,eACXa,IAAKrC,EACLsC,aAAe,kBAAIH,EAAcnC,IACjCyB,MACC,CAACc,IAAIL,EAAUlC,GAAGb,OAClBqD,MAAMN,EAAUlC,GAAGX,SACnBoD,OAAOP,EAAUlC,GAAGT,UACpBmD,KAAKR,EAAUlC,GAAGf,aAOvB,OAEEoC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbU,EAAUS,OAAS,EAAItB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,yCAAuE,GAC/FH,EAAAC,EAAAC,cAAA,OAAKqB,GAAG,aAAaC,IAAI,GAAGC,IAAKb,EAASnD,MAAM,QAAQE,OAAO,SAC9DoD,KCjBAW,SAAa,CAClBC,MAAM,GACNf,QAAQ,GACRC,UAAU,GACVe,MAAM,EACNC,QAAQ,GACRvC,WAAU,EACVwC,WAAW,OACXC,UAAU,QACVC,OAAM,IAIDC,cACL,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAIEI,YAAc,SAACC,GACd,IAAMC,EAAYD,EAAKE,QAAQ,GAAGF,KAAKG,QACpCC,EAAUH,EAAU1F,IAAI,SAAAD,GAAI,OAAIA,IAChCqB,EAASsE,EAAU1F,IAAI,SAAAyB,GAAG,OAC/BA,EAAIgE,KAAK1F,KAAK+F,eAAeC,SAAS,KACjCzE,EAAYoE,EAAU1F,IAAI,SAAAiC,GAAM,OACrCA,EAAOwD,KAAK1F,KAAKiG,kBAAkBD,SAAS,KACvC1E,EAAUqE,EAAU1F,IAAI,SAAA+B,GAAI,OACjCA,EAAK0D,KAAK1F,KAAKkG,yBAAyBF,SAAS,KAClDd,EAAKiB,SAAS,CACVtC,UAAU9D,EAAe+F,GAC5BjB,QAAQzD,EAAWC,EAAOC,EAAQC,MAhBvB2D,EAoBbkB,cAAe,SAACC,GAEf,GAA4B,SAAzBnB,EAAKoB,MAAMxB,YACb,GAAGuB,EAAEE,OAAOC,MAAM,GAAG,CAEpB,IAAIC,EAAOJ,EAAEE,OAAOC,MAAM,GACrBE,EAAU,IAAIC,WAClBD,EAAOE,cAAcH,GACrBC,EAAOG,OAAS,SAACR,GACjBnB,EAAKiB,SAAS,CAACxB,MAAM0B,EAAEE,OAAOO,gBAIhC5B,EAAKiB,SAAS,CAACxB,MAAM0B,EAAEE,OAAOxE,SAjCnBmD,EAoCb6B,mBAAoB,WACU,SAA1B7B,EAAKoB,MAAMxB,WACbI,EAAKiB,SAAS,CAACrB,WAAW,OAAQC,UAAU,QAE5CG,EAAKiB,SAAS,CAACrB,WAAW,OAAQC,UAAU,WAxCjCG,EA2Cb8B,eAAe,SAACX,GACfnB,EAAKiB,SAAS,CAACvC,QAAQsB,EAAKoB,MAAM3B,MAAOrC,WAAU,IACnD,IAAI2E,EAAY/B,EAAKoB,MAAM3B,MAAMuC,MAAM,IAAIC,MAAM,IAAIC,KAAK,IACnC,KAApBlC,EAAKoB,MAAM3B,MACb0C,MAAM,kDAGPC,EAAIC,OAAOC,QACN,mCAC0B,SAA1BtC,EAAKoB,MAAMxB,WAAuBI,EAAKoB,MAAM3B,MAAQsC,GACpDQ,KAAK,SAAAC,GAEFA,EAAS9B,QAAQ,GAAGF,KAAKG,QAAQvB,OAAO,GAC1CY,EAAKO,YAAYiC,GACjBxC,EAAKiB,SAAS,CAACnB,OAAM,KAEnBE,EAAKiB,SAAS,CAACnB,OAAM,EAAKpB,QAAQ,GAAGC,UAAU,OAGlD8D,MAAM,SAAAC,GAAG,OAAI1C,EAAKiB,SAAS,CAACnB,OAAM,EAAKpB,QAAQ,GAAGC,UAAU,QA9DtDqB,EAkEbpB,cAAc,SAACc,GACdM,EAAKiB,SAAS,CACbvB,MAAMA,EACNtC,WAAU,KAnEX4C,EAAKoB,MAAQ5B,EAFDQ,wEAyEH,IAAA2C,EACwExC,KAAKiB,MAA/EzC,EADEgE,EACFhE,UAAWD,EADTiE,EACSjE,QAAQgB,EADjBiD,EACiBjD,MAAMC,EADvBgD,EACuBhD,QAAQvC,EAD/BuF,EAC+BvF,UAAUyC,EADzC8C,EACyC9C,UAAWD,EADpD+C,EACoD/C,WAAWE,EAD/D6C,EAC+D7C,MACnE8C,EAAgBjD,EAAQD,GAC3B,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oCAAd,oBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAAb,sDACHH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAc4E,QAAS1C,KAAK0B,oBACrC/D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAhB,aAA0D4B,IAEhE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAEC,SAAf2B,EACA9B,EAAAC,EAAAC,cAAA,SACCC,UAAU,gBACV6E,KAAK,OACLC,SAAU5C,KAAKe,gBAEhBpD,EAAAC,EAAAC,cAAA,SACCC,UAAU,oBACV6E,KAAK,OACLE,YAAY,OACZD,SAAU5C,KAAKe,gBAGhBpD,EAAAC,EAAAC,cAAA,UACCC,UAAU,mCACV4E,QAAS1C,KAAK2B,gBAFf,YAQAhC,EAAMhC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,2BAAqD,GAC5DH,EAAAC,EAAAC,cAACiF,EAAD,CACC5E,KAAMuE,EACNxF,UAAWA,IAEZU,EAAAC,EAAAC,cAACkF,EAAD,CACCxE,QAASA,EACTC,UAAWA,EACXC,cAAgBuB,KAAKvB,wBArHPuE,aA4HZf,EAAM,IAAIgB,IAASrD,IAAI,CAC5BsD,OAAQ,qCAGMtD,IC1IKuD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECVNC,IAASC,OAAO9F,EAAAC,EAAAC,cAAC6F,EAAD,MAASxI,SAASC,eAAe,SDyH3C,kBAAmBwI,WACrBA,UAAUC,cAAcC,MAAMzB,KAAK,SAAA0B,GACjCA,EAAaC","file":"static/js/main.e8775c04.chunk.js","sourcesContent":["\n\nexport const getFaceBoundry = (face) =>{\n\t\treturn face.map(n =>{\n\t\t\tconst detectedFace = n.region_info.bounding_box;\n\t\t\tconst image = document.getElementById('inputimage');\n    \t\tconst width = Number(image.width);\n    \t\tconst height = Number(image.height);\n    \t\treturn {\n    \t\t   leftCol : detectedFace.left_col * width,\n      \t\t   topRow : detectedFace.top_row * height,\n      \t\t   rightCol : width - (detectedFace.right_col * width),\n               bottomRow : height - (detectedFace.bottom_row * height)\n    \t\t}\n\t\t});\n}\n\n\n","\nexport const getNewInfo = (getAge, getRace,getGender) =>{\n\n\tlet newArray = [];\t\n\t\n\t\tgetAge.forEach((age,i) => newArray.push({'age':getAge[i].name, 'ageProb':getAge[i].value}));\n\t\t\t\n\t\tgetRace.forEach((race,i) => {newArray[i].race = getRace[i].name; newArray[i].raceProb = getRace[i].value});\n\t\t\t\t\n\t\tgetGender.forEach((gender,i) => {newArray[i].gender= getGender[i].name; newArray[i].genderProb = getGender[i].value});\n\n\treturn newArray;\n\n}\n\n","import React from 'react'; \n\n\nconst InfoSection = ({isVisible, age,agePercent,race,racePercent,gender,genderPercent})=> {\n\tconst ag= Math.round(age);\n\tconst ageP=Math.round(agePercent * 100)+'%';\n\tconst raceP= Math.round(agePercent *100)+'%';\n\tconst genderP=Math.round(genderPercent*100)+'%';  \n\n\treturn(\n\t\t<div className=\"h3 light-blue\">\n\n\t\t<div className=\"w-80 center\" style={isVisible?{display:'block'}:{display: 'none'}}>\n\t\t\t<div className=\" center\">\t\n\t\t\t\t<div className=\"mb3 mt3 mr3\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Age: </span>\n\t\t\t\t\t\t<span className='white pr1'> {ag}</span>  \n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Probability:</span>\n\t\t\t\t\t\t<span className='white pr1'> {ageP}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\n\n\t\t\t\t<div className=\"mb3 mt3 mr3\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Gender:</span> \n\t\t\t\t\t\t<span className='white pr1'> {gender}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>  \n\t\t\t\t\t\t<span>Probability:</span>\n\t\t\t\t\t\t<span className='white pr1'> {genderP}</span> \n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"mb3 mt3\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Ethnic: </span>\n\t\t\t\t\t\t<span className='white pr1'> {race}</span> \n\t\t\t\t\t</div>\n\t\t\t\t\t<div> \n\t\t\t\t\t\t<span>Probability:</span>\n\t\t\t\t\t\t<span className='white pr1'> {raceP}</span> \n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t</div>\t\n\t\t\t</div>\t\n\t\t\t\n\t\t</div>\n\t)\n}\nexport default InfoSection;\n","import React from 'react';\nimport InfoSection from './InfoSection';\n\nconst DisplayInfo = ({info,isVisible})=> {\n\n\tlet arr=[];\n\tfor(let props in info){\n\t\tarr.push(info[props]);\n\t}\n\n\n\t\t\n\treturn(\n\t\t<InfoSection\n\t\t    isVisible={isVisible}\n\t\t\tage= {arr[0]}\n\t\t\tagePercent={arr[1]}\n\t\t\trace={arr[2]}\n\t\t\tracePercent={arr[3]}\n\t\t\tgender={arr[4]}\n\t\t\tgenderPercent={arr[5]}\n\t\t/>\n\n\t)\n\t\n\n}\nexport default DisplayInfo;\n","import React from 'react';\n\nconst FrameBox = ({picture,faceFrame,onHandleMouse})=>{\n\t const box = faceFrame.map((box,i)=>{\n\t \treturn(\n\t \t\t<div \n\t\t \t\tclassName ='box grow dim' \n\t\t \t\tkey={i} \n\t\t \t\tonMouseEnter ={()=>onHandleMouse(i)}\n\t\t \t\tstyle={\n\t\t \t\t\t{top:faceFrame[i].topRow, \n\t\t \t\t\tright:faceFrame[i].rightCol, \n\t\t \t\t\tbottom:faceFrame[i].bottomRow, \n\t\t \t\t\tleft:faceFrame[i].leftCol}\n\t\t \t\t\t}>\n\n\t \t\t</div>\n\t \t)\n\t })\n\n\treturn(\n\n\t\t\t<div className='center'>\n\t\t\t\t<div className='absolute mt2 absolute-center'>\n\t\t\t\t\t{faceFrame.length > 0 ? <p className=\"washed-yellow\">*Hover over the box to see the result</p>:\"\"}\n\t\t\t\t\t<img id='inputimage' alt='' src={picture} width='600px' height='auto'/>\n\t\t\t\t\t{box}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\n\t)\n\n}\nexport default FrameBox;","import React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport {getFaceBoundry} from './func/getFaceBoundry';\nimport {getNewInfo} from './func/getNewInfo';\nimport DisplayInfo from './DisplayInfo';\nimport FrameBox from './FrameBox';\nimport './App.css';\n\n\nconst initialState={\n\tinput:'',\n\tpicture:'',\n\tfaceFrame:[],\n\tindex:0,\n\tgetInfo:[],\n\tisVisible:false,\n\tinputState:'text',\n\tstateText:'local',\n\terror:false\n}\n\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = initialState;\n\t}\n\n    getFaceArea = (data)=>{\n    \tconst imageInfo = data.outputs[0].data.regions;\n\t\tconst allFace = imageInfo.map(face => face);//For Calculate face location in a image\n\t\tconst getAge = imageInfo.map(age =>\n\t\t\tage.data.face.age_appearance.concepts[0]);//For age\n\t\tconst getGender = imageInfo.map(gender =>\n\t\t\tgender.data.face.gender_appearance.concepts[0]);//For gender\n\t\tconst getRace = imageInfo.map(race =>\n\t\t\trace.data.face.multicultural_appearance.concepts[0]);//For race\n\t\tthis.setState({ \n\t     faceFrame:getFaceBoundry(allFace), //set faceFrame \n\t\t getInfo:getNewInfo(getAge,getRace,getGender)//set getInfo to whatever it is return back from getNewInfo function\n\t\t});\t\t\n\t}\n\n\tonInputChange =(e)=>{\n\n\t\tif(this.state.inputState ==='file'){\n\t\t\tif(e.target.files[0]){\n\n\t\t\t\tlet file = e.target.files[0];\n\t\t \t\tlet reader  = new FileReader();\n\t\t \t\treader.readAsDataURL(file)\n\t\t \t\treader.onload = (e)=>{\n\t\t \t\tthis.setState({input:e.target.result})\n\t\t \t\t}\t\n\t\t\t}\n\t\t}else{\n\t\t\tthis.setState({input:e.target.value});\n\t\t}\n\t}\n\tonHandleInputState= () =>{\n\t\tif(this.state.inputState === 'text'){\n\t\t\tthis.setState({inputState:'file', stateText:'URL'})\n\t\t}else{\n\t\t\tthis.setState({inputState:'text', stateText:'local'})\n\t\t}\n\t}\n\tonHandleSubmit=(e)=>{\n\t\tthis.setState({picture:this.state.input, isVisible:false});\n\t\tlet sendInput = this.state.input.split('').slice(23).join('');\n\t\tif(this.state.input ===\"\"){\n\t\t\talert(\"Please submit an image. Your input is empty!!!\")\n\t\t}\n\t\telse{\n\t\tapp.models.predict(\n      \t\"c0c0ac362b03416da06ab3fa36fb58e3\",\n      \tthis.state.inputState === 'text'? this.state.input : sendInput)\n      \t.then(response =>{\n\n      \t\tif(response.outputs[0].data.regions.length>0){\n      \t\t\tthis.getFaceArea(response);\n      \t\t\tthis.setState({error:false})\n      \t    }else{\n      \t    this.setState({error:true,picture:\"\",faceFrame:[]})\n      \t\t}\t\n      \t})\n      \t.catch(err => this.setState({error:true,picture:\"\",faceFrame:[]}));\n      \t}\n\t}\n\n\tonHandleMouse=(index)=>{\n\t\tthis.setState({\n\t\t\tindex:index,\n\t\t\tisVisible:true\n\t\t});\n\t}\n\n  render() {\n  \tconst{faceFrame, picture,index,getInfo,isVisible,stateText, inputState,error} = this.state;\n  \tlet displayPerson = getInfo[index];\n    return (\n      <div className=\"washed-yellow\">\n\n      \t<h1 className='f3 f1-ns mt5 mb1 pa2 center  fw5'>Demographics App</h1>\n      \t<p className=\" center f5-ns f6 ml2 mr2\">Submit an image for age, gender, ethnic prediction</p>\n  \t\t<p className=\"center pa2 \" onClick={this.onHandleInputState}>\n      \t\t<span className=\"ba pointer pa2 br2 w4 tc dim\">Submit by {stateText}</span>\n\t    </p>\n\t\t<div className='center mb3 mt3'>\n\t\t\t<div className='imageForm ml3 mr3 ba'>\n\t\t\t\t{\n\t\t\t\tinputState === \"file\" ?\n\t\t\t\t<input \n\t\t\t\t\tclassName='f4-ns f5 w-70' \n\t\t\t\t\ttype=\"file\" \n\t\t\t\t\tonChange={this.onInputChange} />\n\t\t\t\t:\t\n\t\t\t\t<input \n\t\t\t\t\tclassName='f4-ns f5 pa2 w-70' \n\t\t\t\t\ttype='text' \n\t\t\t\t\tplaceholder='URL:'\n\t\t\t\t\tonChange={this.onInputChange}\n\t\t\t\t/>\n\t\t\t    }\t\n\t\t\t\t<button \n\t\t\t\t\tclassName='w-30 f4-ns ph3 pv2 dib submitBtn' \n\t\t\t\t\tonClick={this.onHandleSubmit}>\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t\t{error?<p className=\"center f4\">Error detecting face...</p>:\"\"}\n\t\t\t<DisplayInfo \n\t\t\t\tinfo={displayPerson} \n\t\t\t\tisVisible={isVisible}\n\t\t\t/>\n\t\t\t<FrameBox \n\t\t\t\tpicture={picture} \n\t\t\t\tfaceFrame={faceFrame} \n\t\t\t\tonHandleMouse ={this.onHandleMouse}\t\t\t\n\t\t\t/>\n      </div>\n    );\n  }\n}\n\nconst app = new Clarifai.App({\n apiKey: '96b6b6990bce404ea56ca1c12646b30e'\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}