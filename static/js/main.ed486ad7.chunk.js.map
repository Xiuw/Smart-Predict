{"version":3,"sources":["func/getFaceBoundry.js","func/getNewInfo.js","InfoSection.js","DisplayInfo.js","FrameBox.js","App.js","serviceWorker.js","index.js"],"names":["getFaceBoundry","face","map","n","detectedFace","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","getNewInfo","getAge","getRace","getGender","newArray","forEach","age","i","push","name","ageProb","value","race","raceProb","gender","genderProb","InfoSection","_ref","isVisible","agePercent","racePercent","genderPercent","ag","Math","round","ageP","raceP","genderP","react_default","a","createElement","className","style","display","DisplayInfo","info","arr","props","src_InfoSection","FrameBox","picture","faceFrame","onHandleMouse","box","key","onMouseEnter","top","right","bottom","left","id","alt","src","initialState","input","index","getInfo","app","Clarifai","App","apiKey","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getFaceArea","data","imageInfo","outputs","regions","allFace","age_appearance","concepts","gender_appearance","multicultural_appearance","setState","onInputChange","e","target","onHandleSubmit","state","models","predict","then","response","catch","err","console","log","_this$state","displayPerson","type","onChange","onClick","src_DisplayInfo","src_FrameBox","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oRAEaA,EAAiB,SAACC,GAC7B,OAAOA,EAAKC,IAAI,SAAAC,GACf,IAAMC,EAAeD,EAAEE,YAAYC,aAC7BC,EAAQC,SAASC,eAAe,cAC7BC,EAAQC,OAAOJ,EAAMG,OACrBE,EAASD,OAAOJ,EAAMK,QAC5B,MAAO,CACJC,QAAUT,EAAaU,SAAWJ,EAChCK,OAASX,EAAaY,QAAUJ,EAChCK,SAAWP,EAASN,EAAac,UAAYR,EACzCS,UAAYP,EAAUR,EAAagB,WAAaR,MCXlDS,EAAa,SAACC,EAAQC,EAAQC,GAE1C,IAAIC,EAAW,GAQf,OANCH,EAAOI,QAAQ,SAACC,EAAIC,GAAL,OAAWH,EAASI,KAAK,CAACF,IAAML,EAAOM,GAAGE,KAAMC,QAAUT,EAAOM,GAAGI,UAEnFT,EAAQG,QAAQ,SAACO,EAAKL,GAAOH,EAASG,GAAGK,KAAOV,EAAQK,GAAGE,KAAML,EAASG,GAAGM,SAAWX,EAAQK,GAAGI,QAEnGR,EAAUE,QAAQ,SAACS,EAAOP,GAAOH,EAASG,GAAGO,OAAQX,EAAUI,GAAGE,KAAML,EAASG,GAAGQ,WAAaZ,EAAUI,GAAGI,QAExGP,GCyCOY,EAjDK,SAAAC,GAAsE,IAApEC,EAAoED,EAApEC,UAAWZ,EAAyDW,EAAzDX,IAAIa,EAAqDF,EAArDE,WAAWP,EAA0CK,EAA1CL,KAAiBE,GAAyBG,EAArCG,YAAqCH,EAAzBH,QAAOO,EAAkBJ,EAAlBI,cACjEC,EAAIC,KAAKC,MAAMlB,GACfmB,EAAKF,KAAKC,MAAmB,IAAbL,GAAkB,IAClCO,EAAOH,KAAKC,MAAkB,IAAZL,GAAiB,IACnCQ,EAAQJ,KAAKC,MAAoB,IAAdH,GAAmB,IAE5C,OACCO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,MAAOd,EAAU,CAACe,QAAQ,SAAS,CAACA,QAAS,SACzEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,IAAiCT,IAElCM,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,IAAiCN,KAInCG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,IAAiCjB,IAElCc,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,IAAiCJ,KAKnCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,IAAiCnB,IAElCgB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,IAAiCL,QCfxBQ,EAxBK,SAAAjB,GAAqB,IAAnBkB,EAAmBlB,EAAnBkB,KAAKjB,EAAcD,EAAdC,UAEtBkB,EAAI,GACR,IAAI,IAAIC,KAASF,EAChBC,EAAI5B,KAAK2B,EAAKE,IAKf,OACCT,EAAAC,EAAAC,cAACQ,EAAD,CACIpB,UAAWA,EACdZ,IAAM8B,EAAI,GACVjB,WAAYiB,EAAI,GAChBxB,KAAMwB,EAAI,GACVhB,YAAagB,EAAI,GACjBtB,OAAQsB,EAAI,GACZf,cAAee,EAAI,MCePG,EA/BE,SAAAtB,GAAqC,IAAnCuB,EAAmCvB,EAAnCuB,QAAQC,EAA2BxB,EAA3BwB,UAAUC,EAAiBzB,EAAjByB,cAE7BC,EAAMF,EAAU5D,IAAI,SAAC8D,EAAIpC,GAC9B,OACCqB,EAAAC,EAAAC,cAAA,OACCC,UAAW,eACXa,IAAKrC,EACLsC,aAAe,kBAAIH,EAAcnC,IACjCyB,MACC,CAACc,IAAIL,EAAUlC,GAAGb,OAClBqD,MAAMN,EAAUlC,GAAGX,SACnBoD,OAAOP,EAAUlC,GAAGT,UACpBmD,KAAKR,EAAUlC,GAAGf,aAOvB,OAEEoC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACdH,EAAAC,EAAAC,cAAA,OAAKoB,GAAG,aAAaC,IAAI,GAAGC,IAAKZ,EAASnD,MAAM,QAAQE,OAAO,SAC9DoD,KCnBAU,SAAa,CAClBC,MAAM,GACNd,QAAQ,GACRC,UAAU,GACVc,MAAM,EACNC,QAAQ,GACRtC,WAAU,IAGLuC,EAAM,IAAIC,IAASC,IAAI,CAC5BC,OAAQ,qCAuGMD,cAnGd,SAAAA,IAAa,IAAAE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACZE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,QAIEI,YAAc,SAACC,GACd,IAAMC,EAAYD,EAAKE,QAAQ,GAAGF,KAAKG,QAEpCC,EAAUH,EAAUzF,IAAI,SAAAD,GAAI,OAAIA,IAEhCqB,EAASqE,EAAUzF,IAAI,SAAAyB,GAAG,OAC/BA,EAAI+D,KAAKzF,KAAK8F,eAAeC,SAAS,KACjCxE,EAAYmE,EAAUzF,IAAI,SAAAiC,GAAM,OACrCA,EAAOuD,KAAKzF,KAAKgG,kBAAkBD,SAAS,KACvCzE,EAAUoE,EAAUzF,IAAI,SAAA+B,GAAI,OACjCA,EAAKyD,KAAKzF,KAAKiG,yBAAyBF,SAAS,KAElDd,EAAKiB,SAAS,CACTrC,UAAU9D,EAAe8F,GAC5BjB,QAAQxD,EAAWC,EAAOC,EAAQC,MAnBxB0D,EA0BbkB,cAAe,SAACC,GACfnB,EAAKiB,SAAS,CAACxB,MAAM0B,EAAEC,OAAOtE,SA3BlBkD,EAgCbqB,eAAe,SAACF,GACfnB,EAAKiB,SAAS,CAACtC,QAAQqB,EAAKsB,MAAM7B,MAAOpC,WAAU,IAEnDuC,EAAI2B,OAAOC,QACN,mCACAxB,EAAKsB,MAAM7B,OACVgC,KAAK,SAAAC,GACL1B,EAAKO,YAAYmB,KAGjBC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,OA1Cf9B,EA6CbnB,cAAc,SAACa,GACdM,EAAKiB,SAAS,CACbvB,MAAMA,EACNrC,WAAU,KA9CX2C,EAAKsB,MAAQ9B,EAFDQ,wEAoDH,IAAA+B,EAC4C5B,KAAKmB,MAAnD1C,EADEmD,EACFnD,UAAWD,EADToD,EACSpD,QAAQe,EADjBqC,EACiBrC,MAAMC,EADvBoC,EACuBpC,QAAQtC,EAD/B0E,EAC+B1E,UAEnC2E,EAAgBrC,EAAQD,GAE3B,OACE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IAEdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+BAAd,oBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,6BAGLH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAEdH,EAAAC,EAAAC,cAAA,SACCC,UAAU,qBACV+D,KAAK,OACLC,SAAU/B,KAAKe,gBAGhBnD,EAAAC,EAAAC,cAAA,UACCC,UAAU,sDACViE,QAAShC,KAAKkB,gBAFf,YASDtD,EAAAC,EAAAC,cAACmE,EAAD,CACC9D,KAAM0D,EACN3E,UAAWA,IAGZU,EAAAC,EAAAC,cAACoE,EAAD,CACC1D,QAASA,EACTC,UAAWA,EACXC,cAAgBsB,KAAKtB,wBA3FPyD,aCVEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECVNC,IAASC,OAAO9E,EAAAC,EAAAC,cAAC6E,EAAD,MAASxH,SAASC,eAAe,SDyH3C,kBAAmBwH,WACrBA,UAAUC,cAAcC,MAAMxB,KAAK,SAAAyB,GACjCA,EAAaC","file":"static/js/main.ed486ad7.chunk.js","sourcesContent":["\n\nexport const getFaceBoundry = (face) =>{\n\t\treturn face.map(n =>{\n\t\t\tconst detectedFace = n.region_info.bounding_box;\n\t\t\tconst image = document.getElementById('inputimage');\n    \t\tconst width = Number(image.width);\n    \t\tconst height = Number(image.height);\n    \t\treturn {\n    \t\t   leftCol : detectedFace.left_col * width,\n      \t\t   topRow : detectedFace.top_row * height,\n      \t\t   rightCol : width - (detectedFace.right_col * width),\n               bottomRow : height - (detectedFace.bottom_row * height)\n    \t\t}\n\t\t});\n}\n\n\n","\nexport const getNewInfo = (getAge, getRace,getGender) =>{\n\n\tlet newArray = [];\t\n\t\n\t\tgetAge.forEach((age,i) => newArray.push({'age':getAge[i].name, 'ageProb':getAge[i].value}));\n\t\t\t\n\t\tgetRace.forEach((race,i) => {newArray[i].race = getRace[i].name; newArray[i].raceProb = getRace[i].value});\n\t\t\t\t\n\t\tgetGender.forEach((gender,i) => {newArray[i].gender= getGender[i].name; newArray[i].genderProb = getGender[i].value});\n\n\treturn newArray;\n\n}\n\n","import React from 'react'; \n\n\nconst InfoSection = ({isVisible, age,agePercent,race,racePercent,gender,genderPercent})=> {\n\tconst ag= Math.round(age);\n\tconst ageP=Math.round(agePercent * 100)+'%';\n\tconst raceP= Math.round(agePercent *100)+'%';\n\tconst genderP=Math.round(genderPercent*100)+'%';  \n\n\treturn(\n\t\t<div className=\"w-70 center\" style={isVisible?{display:'block'}:{display: 'none'}}>\n\t\t\t<div className=\" center\">\t\n\t\t\t\t<div className=\"mb3 mt3 mr3\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Age: </span>\n\t\t\t\t\t\t<span className='white-80 pr1'> {ag}</span>  \n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Probability:</span>\n\t\t\t\t\t\t<span className='white-80 pr1'> {ageP}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\n\n\t\t\t\t<div className=\"mb3 mt3 mr3\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Gender:</span> \n\t\t\t\t\t\t<span className='white-80 pr1'> {gender}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>  \n\t\t\t\t\t\t<span>Probability:</span>\n\t\t\t\t\t\t<span className='white-80 pr1'> {genderP}</span> \n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"mb3 mt3\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span>Ethnic: </span>\n\t\t\t\t\t\t<span className='white-80 pr1'> {race}</span> \n\t\t\t\t\t</div>\n\t\t\t\t\t<div> \n\t\t\t\t\t\t<span>Probability:</span>\n\t\t\t\t\t\t<span className='white-80 pr1'> {raceP}</span> \n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t</div>\t\n\t\t\t\t\n\t\t\t\n\t\t</div>\n\t)\n}\nexport default InfoSection;\n","import React from 'react';\nimport InfoSection from './InfoSection';\n\nconst DisplayInfo = ({info,isVisible})=> {\n\n\tlet arr=[];\n\tfor(let props in info){\n\t\tarr.push(info[props]);\n\t}\n\n\n\t\t\n\treturn(\n\t\t<InfoSection\n\t\t    isVisible={isVisible}\n\t\t\tage= {arr[0]}\n\t\t\tagePercent={arr[1]}\n\t\t\trace={arr[2]}\n\t\t\tracePercent={arr[3]}\n\t\t\tgender={arr[4]}\n\t\t\tgenderPercent={arr[5]}\n\t\t/>\n\n\t)\n\t\n\n}\nexport default DisplayInfo;\n","import React from 'react';\n\n\n\nconst FrameBox = ({picture,faceFrame,onHandleMouse})=>{\n\n\t const box = faceFrame.map((box,i)=>{\n\t \treturn(\n\t \t\t<div \n\t\t \t\tclassName ='box grow dim' \n\t\t \t\tkey={i} \n\t\t \t\tonMouseEnter ={()=>onHandleMouse(i)}\n\t\t \t\tstyle={\n\t\t \t\t\t{top:faceFrame[i].topRow, \n\t\t \t\t\tright:faceFrame[i].rightCol, \n\t\t \t\t\tbottom:faceFrame[i].bottomRow, \n\t\t \t\t\tleft:faceFrame[i].leftCol}\n\t\t \t\t\t}>\n\n\t \t\t</div>\n\t \t)\n\t })\n\n\treturn(\n\t\t\n\t\t\t<div className='center'>\n\t\t\t\t<div className='absolute mt2 absolute-center'>\n\t\t\t\t\t<img id='inputimage' alt='' src={picture} width='600px' height='auto'/>\n\t\t\t\t\t{box}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\n\t)\n\n}\nexport default FrameBox;","import React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport {getFaceBoundry} from './func/getFaceBoundry';\nimport {getNewInfo} from './func/getNewInfo';\nimport DisplayInfo from './DisplayInfo';\nimport FrameBox from './FrameBox';\nimport './App.css';\n\n\nconst initialState={\n\tinput:'',\n\tpicture:'',\n\tfaceFrame:[],\n\tindex:0,\n\tgetInfo:[],\n\tisVisible:false\n}\n\nconst app = new Clarifai.App({\n apiKey: '96b6b6990bce404ea56ca1c12646b30e'\n});\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = initialState;\n\t}\n\n    getFaceArea = (data)=>{\n    \tconst imageInfo = data.outputs[0].data.regions;\n\n\t\tconst allFace = imageInfo.map(face => face);//For Calculate face location in a image\n\n\t\tconst getAge = imageInfo.map(age =>\n\t\t\tage.data.face.age_appearance.concepts[0]);//For age\n\t\tconst getGender = imageInfo.map(gender =>\n\t\t\tgender.data.face.gender_appearance.concepts[0]);//For gender\n\t\tconst getRace = imageInfo.map(race =>\n\t\t\trace.data.face.multicultural_appearance.concepts[0]);//For race\n\t\t\n\t\tthis.setState({ \n\t\t     faceFrame:getFaceBoundry(allFace),\n\t\t\t getInfo:getNewInfo(getAge,getRace,getGender)\n\n\t\t\t});\n\t\t\n\t}\n\n\n\tonInputChange =(e)=>{\n\t\tthis.setState({input:e.target.value});\n\t}\n\n\n\n\tonHandleSubmit=(e)=>{\n\t\tthis.setState({picture:this.state.input, isVisible:false});\n\n\t\tapp.models.predict(\n      \t\"c0c0ac362b03416da06ab3fa36fb58e3\",\n      \tthis.state.input)\n      \t.then(response =>{\n      \t\tthis.getFaceArea(response);\n\n      \t})\n      \t.catch(err => console.log);\n\n\t}\n\tonHandleMouse=(index)=>{\n\t\tthis.setState({\n\t\t\tindex:index,\n\t\t\tisVisible:true\n\t\t});\n\t}\n\n  render() {\n  \tconst{faceFrame, picture,index,getInfo,isVisible} = this.state;\n \n  \tlet displayPerson = getInfo[index];\n\n    return (\n      <div className=\"\">\n\n      \t<h1 className='mt5 mb3 pa3 white-80 center'>Demographics App</h1>\n      \t<p className=\"pa4 center\">Submit an image URL below</p>\n      \t\n\n\t\t<div className='center mb3'>\n\t\t\t<div className='imageForm center pa1 br3 shadow-2'>\n\t\n\t\t\t\t<input \n\t\t\t\t\tclassName='f4 pa2 w-70 center' \n\t\t\t\t\ttype='text' \n\t\t\t\t\tonChange={this.onInputChange}\n\t\t\t\t/>\n\t\t\n\t\t\t\t<button \n\t\t\t\t\tclassName='w-30 f4 link grow ph3 pv2 dib white-80 bg-dark-blue' \n\t\t\t\t\tonClick={this.onHandleSubmit}>Submit\n\t\t\t\t</button>\n\t\t\t\n\t\t\t</div>\n\t\t</div>\n\n\t\n\t\t\t<DisplayInfo \n\t\t\t\tinfo={displayPerson} \n\t\t\t\tisVisible={isVisible}\n\t\t\t/>\n\n\t\t\t<FrameBox \n\t\t\t\tpicture={picture} \n\t\t\t\tfaceFrame={faceFrame} \n\t\t\t\tonHandleMouse ={this.onHandleMouse}\n\t\t\t\t\n\t\t\t/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}