{"version":3,"sources":["func/getFaceBoundry.js","func/getNewInfo.js","InfoSection.js","DisplayInfo.js","FrameBox.js","App.js","serviceWorker.js","index.js"],"names":["getFaceBoundry","face","map","n","detectedFace","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","getNewInfo","getAge","getRace","getGender","newArray","forEach","age","i","push","name","ageProb","value","race","raceProb","gender","genderProb","InfoSection","_ref","isVisible","agePercent","racePercent","genderPercent","ag","Math","round","ageP","raceP","genderP","react_default","a","createElement","className","style","display","DisplayInfo","info","arr","props","src_InfoSection","FrameBox","picture","faceFrame","onHandleMouse","box","key","onMouseEnter","top","right","bottom","left","id","alt","src","initialState","input","index","getInfo","inputState","stateText","error","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getFaceArea","data","imageInfo","outputs","regions","allFace","age_appearance","concepts","gender_appearance","multicultural_appearance","setState","onInputChange","e","state","target","files","file","reader","FileReader","readAsDataURL","onload","result","onHandleInputState","onHandleSubmit","sendInput","split","slice","join","alert","app","models","predict","then","response","length","catch","err","_this$state","displayPerson","onClick","type","onChange","placeholder","src_DisplayInfo","src_FrameBox","Component","Clarifai","apiKey","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ffad73a.chunk.js","sourcesContent":["\r\n\r\nexport const getFaceBoundry = (face) =>{\r\n\t\treturn face.map(n =>{\r\n\t\t\tconst detectedFace = n.region_info.bounding_box;\r\n\t\t\tconst image = document.getElementById('inputimage');\r\n    \t\tconst width = Number(image.width);\r\n    \t\tconst height = Number(image.height);\r\n    \t\treturn {\r\n    \t\t   leftCol : detectedFace.left_col * width,\r\n      \t\t   topRow : detectedFace.top_row * height,\r\n      \t\t   rightCol : width - (detectedFace.right_col * width),\r\n               bottomRow : height - (detectedFace.bottom_row * height)\r\n    \t\t}\r\n\t\t});\r\n}\r\n\r\n\r\n","\r\nexport const getNewInfo = (getAge, getRace,getGender) =>{\r\n\r\n\tlet newArray = [];\t\r\n\t\r\n\t\tgetAge.forEach((age,i) => newArray.push({'age':getAge[i].name, 'ageProb':getAge[i].value}));\r\n\t\t\t\r\n\t\tgetRace.forEach((race,i) => {newArray[i].race = getRace[i].name; newArray[i].raceProb = getRace[i].value});\r\n\t\t\t\t\r\n\t\tgetGender.forEach((gender,i) => {newArray[i].gender= getGender[i].name; newArray[i].genderProb = getGender[i].value});\r\n\r\n\treturn newArray;\r\n\r\n}\r\n\r\n","import React from 'react'; \r\n\r\n\r\nconst InfoSection = ({isVisible, age,agePercent,race,racePercent,gender,genderPercent})=> {\r\n\tconst ag= Math.round(age);\r\n\tconst ageP=Math.round(agePercent * 100)+'%';\r\n\tconst raceP= Math.round(agePercent *100)+'%';\r\n\tconst genderP=Math.round(genderPercent*100)+'%';  \r\n\r\n\treturn(\r\n\t\t<div className=\"h3 light-blue\">\r\n\r\n\t\t<div className=\"w-80 center\" style={isVisible?{display:'block'}:{display: 'none'}}>\r\n\t\t\t<div className=\" center\">\t\r\n\t\t\t\t<div className=\"mb3 mt3 mr3\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>Age: </span>\r\n\t\t\t\t\t\t<span className='white pr1'> {ag}</span>  \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>Probability:</span>\r\n\t\t\t\t\t\t<span className='white pr1'> {ageP}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\t\r\n\r\n\t\t\t\t<div className=\"mb3 mt3 mr3\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>Gender:</span> \r\n\t\t\t\t\t\t<span className='white pr1'> {gender}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>  \r\n\t\t\t\t\t\t<span>Probability:</span>\r\n\t\t\t\t\t\t<span className='white pr1'> {genderP}</span> \r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"mb3 mt3\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>Ethnic: </span>\r\n\t\t\t\t\t\t<span className='white pr1'> {race}</span> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div> \r\n\t\t\t\t\t\t<span>Probability:</span>\r\n\t\t\t\t\t\t<span className='white pr1'> {raceP}</span> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t</div>\t\r\n\t\t\t</div>\t\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default InfoSection;\r\n","import React from 'react';\r\nimport InfoSection from './InfoSection';\r\n\r\nconst DisplayInfo = ({info,isVisible})=> {\r\n\r\n\tlet arr=[];\r\n\tfor(let props in info){\r\n\t\tarr.push(info[props]);\r\n\t}\r\n\r\n\r\n\t\t\r\n\treturn(\r\n\t\t<InfoSection\r\n\t\t    isVisible={isVisible}\r\n\t\t\tage= {arr[0]}\r\n\t\t\tagePercent={arr[1]}\r\n\t\t\trace={arr[2]}\r\n\t\t\tracePercent={arr[3]}\r\n\t\t\tgender={arr[4]}\r\n\t\t\tgenderPercent={arr[5]}\r\n\t\t/>\r\n\r\n\t)\r\n\t\r\n\r\n}\r\nexport default DisplayInfo;\r\n","import React from 'react';\r\n\r\nconst FrameBox = ({picture,faceFrame,onHandleMouse})=>{\r\n\t const box = faceFrame.map((box,i)=>{\r\n\t \treturn(\r\n\t \t\t<div \r\n\t\t \t\tclassName ='box grow dim' \r\n\t\t \t\tkey={i} \r\n\t\t \t\tonMouseEnter ={()=>onHandleMouse(i)}\r\n\t\t \t\tstyle={\r\n\t\t \t\t\t{top:faceFrame[i].topRow, \r\n\t\t \t\t\tright:faceFrame[i].rightCol, \r\n\t\t \t\t\tbottom:faceFrame[i].bottomRow, \r\n\t\t \t\t\tleft:faceFrame[i].leftCol}\r\n\t\t \t\t\t}>\r\n\r\n\t \t\t</div>\r\n\t \t)\r\n\t })\r\n\r\n\treturn(\r\n\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className='absolute mt2 absolute-center'>\r\n\t\t\t\t\t<img id='inputimage' alt='' src={picture} width='600px' height='auto'/>\r\n\t\t\t\t\t{box}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\r\n\t)\r\n\r\n}\r\nexport default FrameBox;","import React, { Component } from 'react';\r\nimport Clarifai from 'clarifai';\r\nimport {getFaceBoundry} from './func/getFaceBoundry';\r\nimport {getNewInfo} from './func/getNewInfo';\r\nimport DisplayInfo from './DisplayInfo';\r\nimport FrameBox from './FrameBox';\r\nimport './App.css';\r\n\r\n\r\nconst initialState={\r\n\tinput:'',\r\n\tpicture:'',\r\n\tfaceFrame:[],\r\n\tindex:0,\r\n\tgetInfo:[],\r\n\tisVisible:false,\r\n\tinputState:'text',\r\n\tstateText:'local',\r\n\terror:false\r\n}\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = initialState;\r\n\t}\r\n\r\n    getFaceArea = (data)=>{\r\n    \tconst imageInfo = data.outputs[0].data.regions;\r\n\t\tconst allFace = imageInfo.map(face => face);//For Calculate face location in a image\r\n\t\tconst getAge = imageInfo.map(age =>\r\n\t\t\tage.data.face.age_appearance.concepts[0]);//For age\r\n\t\tconst getGender = imageInfo.map(gender =>\r\n\t\t\tgender.data.face.gender_appearance.concepts[0]);//For gender\r\n\t\tconst getRace = imageInfo.map(race =>\r\n\t\t\trace.data.face.multicultural_appearance.concepts[0]);//For race\r\n\t\tthis.setState({ \r\n\t     faceFrame:getFaceBoundry(allFace), //set faceFrame \r\n\t\t getInfo:getNewInfo(getAge,getRace,getGender)//set getInfo to whatever it is return back from getNewInfo function\r\n\t\t});\t\t\r\n\t}\r\n\r\n\tonInputChange =(e)=>{\r\n\t\tif(this.state.inputState ==='file'){\r\n\t\t\tif(e.target.files[0]){\r\n\r\n\t\t\t\tlet file = e.target.files[0];\r\n\t\t \t\tlet reader  = new FileReader();\r\n\t\t \t\treader.readAsDataURL(file)\r\n\t\t \t\treader.onload = (e)=>{\r\n\t\t \t\tthis.setState({input:e.target.result})\r\n\t\t \t\t}\t\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.setState({input:e.target.value});\r\n\t\t}\r\n\t}\r\n\tonHandleInputState= () =>{\r\n\t\tif(this.state.inputState === 'text'){\r\n\t\t\tthis.setState({inputState:'file', stateText:'URL'})\r\n\t\t}else{\r\n\t\t\tthis.setState({inputState:'text', stateText:'local'})\r\n\t\t}\r\n\t}\r\n\tonHandleSubmit=(e)=>{\r\n\t\tthis.setState({picture:this.state.input, isVisible:false});\r\n\t\tlet sendInput = this.state.input.split('').slice(23).join('');\r\n\t\tif(this.state.input ===\"\"){\r\n\t\t\talert(\"Please submit an image. Your input is empty!!!\")\r\n\t\t}\r\n\t\telse{\r\n\t\tapp.models.predict(\r\n      \t\"c0c0ac362b03416da06ab3fa36fb58e3\",\r\n      \tthis.state.inputState === 'text'? this.state.input : sendInput)\r\n      \t.then(response =>{\r\n\r\n      \t\tif(response.outputs[0].data.regions.length>0){\r\n      \t\t\tthis.getFaceArea(response);\r\n      \t\t\tthis.setState({error:false})\r\n      \t    }else{\r\n      \t    this.setState({error:true,picture:\"\",faceFrame:[]})\r\n      \t\t}\t\r\n      \t})\r\n      \t.catch(err => this.setState({error:true,picture:\"\",faceFrame:[]}));\r\n      \t}\r\n\t}\r\n\tonHandleMouse=(index)=>{\r\n\t\tthis.setState({\r\n\t\t\tindex:index,\r\n\t\t\tisVisible:true\r\n\t\t});\r\n\t}\r\n  render() {\r\n  \tconst{faceFrame, picture,index,getInfo,isVisible,stateText, inputState,error} = this.state;\r\n  \tlet displayPerson = getInfo[index];\r\n    return (\r\n      <div className=\"washed-yellow\">\r\n\r\n      \t<h1 className='f3 f1-ns mt5 mb1 pa2 center  fw5'>Smart Predict</h1>\r\n      \t<p className=\" center f5-ns f6 ml2 mr2 pt2\">Submit an image for age, gender, ethnic prediction</p>\r\n  \t\t<p className=\"center pa3 \" onClick={this.onHandleInputState}>\r\n      \t\t<span className=\"ba pointer pa2 br2 w4 tc dim\">Submit by {stateText}</span>\r\n\t    </p>\r\n\t\t<div className='center mb3 mt3'>\r\n\t\t\t<div className='imageForm ml3 mr3 ba'>\r\n\t\t\t\t{\r\n\t\t\t\tinputState === \"file\" ?\r\n\t\t\t\t<input \r\n\t\t\t\t\tclassName='f4-ns f5 w-70' \r\n\t\t\t\t\ttype=\"file\" \r\n\t\t\t\t\tonChange={this.onInputChange} />\r\n\t\t\t\t:\t\r\n\t\t\t\t<input \r\n\t\t\t\t\tclassName='f4-ns f5 pa2 w-70' \r\n\t\t\t\t\ttype='text' \r\n\t\t\t\t\tplaceholder='URL:'\r\n\t\t\t\t\tonChange={this.onInputChange}\r\n\t\t\t\t/>\r\n\t\t\t    }\t\r\n\t\t\t\t<button \r\n\t\t\t\t\tclassName='w-30 f4-ns ph3 pv2 dib submitBtn' \r\n\t\t\t\t\tonClick={this.onHandleSubmit}>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</button>\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t\t{error?<p className=\"center f4\">Error detecting face...</p>:\"\"}\r\n\t\t\t{faceFrame.length > 0 ? <p className=\"washed-yellow center\">*Hover over the box to see the result</p>:\"\"}\r\n\t\t\t<DisplayInfo \r\n\t\t\t\tinfo={displayPerson} \r\n\t\t\t\tisVisible={isVisible}\r\n\t\t\t/>\r\n\t\t\t<FrameBox \r\n\t\t\t\tpicture={picture} \r\n\t\t\t\tfaceFrame={faceFrame} \r\n\t\t\t\tonHandleMouse ={this.onHandleMouse}\t\t\t\r\n\t\t\t/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst app = new Clarifai.App({\r\n apiKey: '96b6b6990bce404ea56ca1c12646b30e'\r\n});\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}